<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow close="PopUpManager.removePopUp(this);"
				creationComplete="initForm();"
				height="592"
				layout="absolute"
				showCloseButton="true"
				title="{linguagem.xml.telaPublicacao.titulo}"
				width="750"
				xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:view="br.ufpe.cin.reuso.view.components.*"
				>

	<mx:Script>
		<![CDATA[
			import br.ufpe.cin.reuso.events.GrupoPesquisaEvent;
			import br.ufpe.cin.reuso.vo.GrupoPesquisaVO;
			import flash.net.navigateToURL;
			import br.ufpe.cin.reuso.view.components.TitleWindowPesquisa;
			import br.ufpe.cin.reuso.events.PublicacaoEvent;
			import br.ufpe.cin.reuso.vo.PublicacaoVO;
			import flexunit.flexui.controls.right.SelectedTestCaseForm;
			import br.ufpe.cin.reuso.view.reports.report.templates.TemplateLista;
			import br.ufpe.cin.reuso.view.reports.report.dataproviders.DPTemplateLista;
			import br.ufpe.cin.reuso.view.reports.report.custom.PreviewWindow;
			import br.ufpe.cin.reuso.util.Dicionario;
			import br.ufpe.cin.reuso.events.MembroEvent;
			import br.ufpe.cin.reuso.vo.MembroVO;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import mx.collections.ArrayCollection;
			
			import mx.managers.PopUpManager;
			import mx.core.Application;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			import mx.binding.utils.BindingUtils;
			import mx.events.FlexEvent;
			import mx.events.CloseEvent;
			
			import org.doc.PaperFormat;
			import org.doc.Document;
			
			import com.universalmind.cairngorm.events.Callbacks;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			
			import br.ufpe.cin.reuso.model.ReusoModelLocator;
			import br.ufpe.cin.reuso.lang.src.Lang;
			
			// Icones dos botões
			[Embed( source='../assets/images/novo.png' )]
			[Bindable]
			private static var ico_incluir:Class;
			
			[Embed( source='../assets/images/pesquisar.png' )]
			[Bindable]
			private static var ico_pesquisar:Class;
			
			[Embed( source='../assets/images/editar.png' )]
			[Bindable]
			private static var ico_editar:Class;
			
			[Embed( source='../assets/images/delete.png' )]
			[Bindable]
			private static var ico_excluir:Class;
			
			[Embed( source='../assets/images/detalhar.png' )]
			[Bindable]
			private static var ico_detalhar:Class;
			
			[Embed( source='../assets/images/listar.png' )]
			[Bindable]
			private static var ico_listar:Class;
			
			[Embed( source='../assets/images/cancelar.png' )]
			[Bindable]
			private static var ico_cancelar:Class;
			
			[Embed( source='../assets/images/salvar.png' )]
			[Bindable]
			private static var ico_salvar:Class;
			
			[Embed( source='../assets/images/incluir.png' )]
			[Bindable]
			private static var ico_adicionar:Class;
			
			[Embed( source='../assets/images/excluir.png' )]
			[Bindable]
			private static var ico_remover:Class;
			
			[Embed( source='../assets/images/adobe.png' )]
			[Bindable]
			private static var ico_adobe:Class;
			
			[Bindable]
			private var dpLinhaPesquisa:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var publicacao:PublicacaoVO;
			
			[Bindable]
			private var dpArquivo:ByteArray;
			
			[Bindable]
			private var dpMembro:ArrayCollection = new ArrayCollection();
			
			private var JanelaPesquisa:TitleWindowPesquisa = null;
			
			public static const AC_SEARCH:uint = 0;
			
			public static const AC_INSERT:uint = 1;
			
			public static const AC_INSERT_AND_NEW:uint = 2;
			
			public static const AC_DETAIL:uint = 3;
			
			public static const AC_UPDATE:uint = 4;
			
			public static const AC_DELETE:uint = 5;
			
			public static const AC_LIST:uint = 6;
			
			private var action:uint = 0;
			
			public var titutoReport:String = "Publicação";
			
			public const VS_CONSULTA:uint = 0;
			
			public const VS_CADASTRO:uint = 1;
			
			private var dataFieldCodigo:String = "id";
			
			private var dataFieldNome:String = "title";
			
			private var dataFieldTipo:String = "tipo";
			
			//private var dataFieldAtivo:String = "ativo";
			
			[Bindable]
			private var dpRegistros:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var dpTipo:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var model:ReusoModelLocator = ReusoModelLocator.getInstance();
			
			[Bindable]
            public var linguagem:Lang;
			
//			[Bindable]
//			private var dpTipoEstudante:ArrayCollection = new ArrayCollection();
			
//			[Bindable]
//			private var dpAtivo:ArrayCollection = new ArrayCollection();

			private var fileRef:FileReference;

            private function browseAndUpload():void {
            	var arr:Array = [];
                arr.push(new FileFilter("Arquivo .pdf", "*.pdf"));
                fileRef.browse(arr);
            }
            
            private function removerPDF():void {
            	this.cadArquivo.source = null;
				this.dpArquivo = null;
            }

            private function fileRef_select(evt:Event):void {
				fileRef.load();
            }

            private function fileRef_progress(evt:ProgressEvent):void {
//                progressBar.visible = true;
            }

            private function fileRef_complete(evt:Event):void {

				this.cadArquivo.source = ico_adobe;
				this.dpArquivo = fileRef.data;
            }
			
			private function initForm():void
			{
				linguagem = model.linguagem;
				
				dpMembro = new ArrayCollection();
				
				fileRef = new FileReference();
				fileRef.addEventListener(Event.SELECT, fileRef_select);
                fileRef.addEventListener(ProgressEvent.PROGRESS, fileRef_progress);
                fileRef.addEventListener(Event.COMPLETE, fileRef_complete);
                
                CONFIG::linhapesquisa{
                var handlers:Callbacks = new Callbacks(onResult_LinhaPesquisa);
				var event:GrupoPesquisaEvent = new GrupoPesquisaEvent(GrupoPesquisaEvent.EVENT_PESQUISAR, handlers);
				event.params = new GrupoPesquisaVO();
				event.dispatch();
                }
				this.dpTipo.addItem({ label: "", data: null });
				this.dpTipo.addItem({ label: Dicionario.PUBLICACAO_ARTIGO_CONFERENCIA, data: Dicionario.PUBLICACAO_ARTIGO_CONFERENCIA });
				this.dpTipo.addItem({ label: Dicionario.PUBLICACAO_ARTIGO_REVISTA, data: Dicionario.PUBLICACAO_ARTIGO_REVISTA });
				this.dpTipo.addItem({ label: Dicionario.PUBLICACAO_TESE, data: Dicionario.PUBLICACAO_TESE });
				this.dpTipo.addItem({ label: Dicionario.PUBLICACAO_DISSERTACAO, data: Dicionario.PUBLICACAO_DISSERTACAO });
				
//				this.dpTipoEstudante.addItem({ label: "", data: null });
//				this.dpTipoEstudante.addItem({ label: Dicionario.MEMBRO_DOUTORADO, data: Dicionario.MEMBRO_DOUTORADO });
//				this.dpTipoEstudante.addItem({ label: Dicionario.MEMBRO_MESTRADO, data: Dicionario.MEMBRO_MESTRADO });
//				this.dpTipoEstudante.addItem({ label: Dicionario.MEMBRO_INICIACAO, data: Dicionario.MEMBRO_INICIACAO });
//				
//				this.dpAtivo.addItem({ label: "", data: null });
//				this.dpAtivo.addItem({ label: Dicionario.MEMBRO_ATIVO, data: Dicionario.MEMBRO_ATIVO });
//				this.dpAtivo.addItem({ label: Dicionario.MEMBRO_FORMER_MEMBER, data: Dicionario.MEMBRO_FORMER_MEMBER });
				
			}
			
			CONFIG::linhapesquisa{
			private function onResult_LinhaPesquisa(result:ArrayCollection):void
			{
				var data:ArrayCollection = new ArrayCollection();
				data.addItem({label: "", data: null, item: null});

				for (var i:uint = 0; i < result.length; i++)
				{
					var d:GrupoPesquisaVO = result.getItemAt(i) as GrupoPesquisaVO;
					data.addItem({label: d.descricao, data: d.id, item: d});
				}
				this.dpLinhaPesquisa = data;
			}
			}
			
			private function getOrdenacao():Array
			{
				return [ new SortField( this.dataFieldCodigo , true ) , new SortField( this.dataFieldNome , true ) , new SortField( this.dataFieldTipo , true )];
			}
			
			private function setEntidade( action:uint ):void
			{
				if (( action == AC_UPDATE ) || ( action == AC_DETAIL ))
				{
					this.publicacao = this.consDataGrid.selectedItem as PublicacaoVO;
				}
				this.dpMembro = publicacao.membroCollection;
				this.cadCodigo.text = publicacao.id.toString();
				this.cadTitulo.text = publicacao.title;
				this.cadTipo.selectedItem = publicacao.tipo;
				CONFIG::linhapesquisa{
				if(publicacao.grupoPesquisa != null)
				{
					this.cadLinhaPesquisa.selectedItem = publicacao.grupoPesquisa.id;
				}else{
					this.cadLinhaPesquisa.selectedItem = null;
				}
				}
				this.cadConferencia.text = publicacao.conference;
				this.cadJornal.text = publicacao.jornal;
				this.cadAutorExterno.text = publicacao.autorExterno;
				this.cadInstituicao.text = publicacao.school;
				this.cadAno.value  = publicacao.ano;
				this.cadVolume.text = publicacao.volume;
				this.cadNumero.text = publicacao.numero.toString();
				this.cadPaginas.value = publicacao.pages;
				this.cadMes.value = publicacao.mes;
				if(publicacao.hasArquivo){
					this.cadArquivo.source = ico_adobe;
//					var urlRequeste:URLRequest;
//					urlRequeste = new URLRequest();
//					
//					urlRequeste.url="publicacao.pdf?id="+publicacao.id.toString();
//					var urlStrem:URLStream;
//					urlStrem = new URLStream();
//					urlStrem.load(urlRequeste);
//					urlStrem.readBytes(this.dpArquivo);
//					this.dpArquivo = urlRequeste.data as ByteArray;
				}
				this.mudaTipo();
			}
			
			private function DispararEvento( action:uint ):void
			{
				var handlers:Callbacks = null;
				var event:PublicacaoEvent = null;
				var f:PublicacaoVO = new PublicacaoVO();
				
				if ( action == AC_SEARCH )
				{
					// Pega os dados da tela de pesquisa
					f.id = int(this.consCodigo.text);
					f.title = this.consTitulo.text;
					f.tipo = this.consTipos.selectedLabel;
				}
				else if (( action == AC_INSERT ) || ( action == AC_INSERT_AND_NEW ) || ( action == AC_UPDATE ))
				{
					// Pega os dados da tela de cadastro
					f.id = int(this.cadCodigo.text);
					f.arquivo = this.dpArquivo
					f.title = this.cadTitulo.text;
					f.conference = this.cadConferencia.text;
					f.jornal = this.cadJornal.text;
					f.autorExterno = this.cadAutorExterno.text;
					f.school = this.cadInstituicao.text;
					f.ano = this.cadAno.value;
					f.volume = this.cadVolume.text;
					f.numero = int(this.cadNumero.text);
					f.pages = this.cadPaginas.value;
					f.mes = this.cadMes.value;
					f.tipo = this.cadTipo.selectedLabel;
					CONFIG::linhapesquisa{
					f.grupoPesquisa = this.cadLinhaPesquisa.selectedItem.item as GrupoPesquisaVO;
					}
					f.membroCollection = this.dpMembro;
				}
				else if ( action == AC_DELETE )
				{
					// Pega os dados no datagrid na tela de conculta
					f = this.consDataGrid.selectedItem as PublicacaoVO;
				}
				
				if ( action == AC_SEARCH )
				{
					handlers = new Callbacks( onResult_Pesquisar );
					event = new PublicacaoEvent( PublicacaoEvent.EVENT_PESQUISAR , handlers );
					
				}
				else if ( action == AC_INSERT )
				{
					handlers = new Callbacks( onResult_SalvarInsert );
					event = new PublicacaoEvent( PublicacaoEvent.EVENT_INSERIR , handlers );
					
				}
				else if ( action == AC_INSERT_AND_NEW )
				{
					handlers = new Callbacks( onResult_SalvarENovo );
					event = new PublicacaoEvent( PublicacaoEvent.EVENT_INSERIR , handlers );
					
				}
				else if ( action == AC_UPDATE )
				{
					handlers = new Callbacks( onResult_SalvarUpdate );
					event = new PublicacaoEvent( PublicacaoEvent.EVENT_EDITAR , handlers );
					
				}
				else if ( action == AC_DELETE )
				{
					if (( this.consDataGrid.selectedItem as PublicacaoVO ) != null )
					{
						handlers = new Callbacks( onResult_Excluir );
						event = new PublicacaoEvent( PublicacaoEvent.EVENT_EXCLUIR , handlers );
					}
					else
					{
						Alert.show( Dicionario.REGISTROS_NAO_SELECIONADO );
					}
				}
				
				if ( event != null )
				{
					event.params = f;
					event.dispatch();
				}
			}
			
			private function openCadastro( action:uint ):void
			{
				this.action = action;
				
				if (( action == AC_UPDATE ) || ( action == AC_DETAIL ))
				{
					if ( this.consDataGrid.selectedItem != null )
					{
						this.cbViewStack.selectedIndex = VS_CADASTRO;
					}
					else
					{
						Alert.show( Dicionario.REGISTROS_NAO_SELECIONADO );
					}
				}
				else
				{
					this.cbViewStack.selectedIndex = VS_CADASTRO;
				}
			}
			
			private function cbViewStackChance():void
			{
				
				this.cadCodigo.enabled = false;
				this.cadTitulo.enabled = true;
				this.cadConferencia.enabled = false;
				this.cadJornal.enabled = false;
				this.cadAutorExterno.enabled = true;
				this.cadInstituicao.enabled = false;
				this.BtnSalvar.visible = true;
				this.BtnSalvarENovo.visible = true;
				this.BtnAdicionarMembro.visible = true;
				this.BtnRemoverMembro.visible = true;
				this.BtnAdicionarArquivo.visible = true;
				this.BtnExcluirArquivo.visible = true;
				this.cadAno.enabled = false;
				this.cadMes.enabled = false;
				this.cadNumero.enabled = false;
				this.cadPaginas.enabled = false;
				this.cadTipo.enabled = true;
				CONFIG::linhapesquisa{
				this.cadLinhaPesquisa.enabled = true;
				}
				this.cadVolume.enabled = false;
				
				this.campoObgTitulo.visible = true;
				this.campoObgConferencia.visible = false;
				this.campoObgInstituicao.visible = false;
				this.campoObgJornal.visible = false;
				this.campoObgAno.visible = false;
								
				if ( this.action == AC_UPDATE )
				{
					this.BtnSalvarENovo.visible = false;
				}
				else if ( this.action == AC_DETAIL )
				{
//					this.cadCodigo.enabled = false;
//					this.cadTitulo.enabled = false;
//					this.cadConferencia.enabled = false;
//					this.cadJornal.enabled = false;
//					this.cadAutorExterno.enabled = false;
//					this.cadInstituicao.enabled = false;
//					this.cadAno.visible = false;
//					this.cadMes.visible = false;
//					this.cadNumero.visible = false;
//					this.cadPaginas.visible = false;
//					this.cadTipo.visible = false;
//					this.cadVolume.visible = false;
					this.BtnAdicionarMembro.visible = false;
					this.BtnRemoverMembro.visible = false;
					this.BtnSalvar.visible = false;
					this.BtnSalvarENovo.visible = false;
					this.BtnAdicionarArquivo.visible = false;
					this.BtnExcluirArquivo.visible = false;
				}
				
				this.setEntidade( this.action );
			}
			
			
			private function pesquisar():void
			{
				this.DispararEvento( AC_SEARCH );
			}
			
			private function salvar():void
			{
				if (validarDados())
				{
					this.DispararEvento( this.action );
				}
			}
			
			private function validarDados():Boolean
			{
				if ( cadTitulo.text.length <= 0 )
				{
					Alert.show( "Favor informa a descrição!" , Dicionario.ALERT_TITLE_ERROR );
					return false;
				}
				if (this.dpMembro.length <= 0){
					Alert.show("Deve haver ao menos um autor!", Dicionario.ALERT_TITLE_ERROR);
					return false;
				}
				if(this.cadTipo.selectedLabel == Dicionario.PUBLICACAO_ARTIGO_CONFERENCIA){
					if(this.cadConferencia.text == ""){
					Alert.show("Campo conferência é obrigatório", Dicionario.ALERT_TITLE_ERROR);
					return false;
					}
				}
				if(this.cadTipo.selectedLabel == Dicionario.PUBLICACAO_ARTIGO_REVISTA){
					if(this.cadJornal.text == ""){
					Alert.show("Campo jornal é obrigatório", Dicionario.ALERT_TITLE_ERROR);
					return false;
					}
				}
				if(this.cadTipo.selectedLabel == Dicionario.PUBLICACAO_DISSERTACAO ||
						this.cadTipo.selectedLabel == Dicionario.PUBLICACAO_TESE){
					if(this.cadInstituicao.text == ""){
					Alert.show("Campo instituição é obrigatório", Dicionario.ALERT_TITLE_ERROR);
					return false;
					}
				}
				return true;
			}
			
			private function salvarENovo():void
			{
				this.DispararEvento( AC_INSERT_AND_NEW );
			}
			
			private function incluir():void
			{
				this.publicacao = new PublicacaoVO();
				this.openCadastro( AC_INSERT );
			}
			
			private function editar():void
			{
				this.openCadastro( AC_UPDATE );
			}
			
			private function detalhar():void
			{
				this.openCadastro( AC_DETAIL );
			}
			
			private function excluir():void
			{
				// instantiate the Alert box
				if ( this.consDataGrid.selectedItem != null )
				{
					var a:Alert = Alert.show( Dicionario.CONFIRMAR_EXCLUSAO , "Confirmar" , Alert.YES | Alert.NO , this , this.confirmarExclusao , null , Alert.NO );
				}
				else
				{
					Alert.show( Dicionario.REGISTROS_NAO_SELECIONADO );
				}
			}
			
			private function confirmarExclusao( event:CloseEvent ):void
			{
				if ( event.detail == Alert.YES )
				{
					this.DispararEvento( AC_DELETE );
				}
			}
			
			private function onResult_Pesquisar( result:ArrayCollection ):void
			{
				this.dpRegistros = result as ArrayCollection;
			}
			
			private function onResult_SalvarInsert( result:Boolean ):void
			{
				if ( result )
				{
					this.cancelarCadastro();
					this.pesquisar();
				}
			}
			
			private function onResult_SalvarENovo( result:Boolean ):void
			{
				if ( result )
				{
					this.limparCampos();
				}
			}
			
			private function onResult_SalvarUpdate( result:Boolean ):void
			{
				if ( result )
				{
					this.cancelarCadastro();
					this.pesquisar();
				}
			}
			
			private function onResult_Excluir( result:Boolean ):void
			{
				if ( result )
				{
					Alert.show( Dicionario.OK_EXCLUIR );
					this.pesquisar();
				}
			}
			
			private function cancelarConsulta():void
			{
				PopUpManager.removePopUp( this );
			}
			
			private function cancelarCadastro():void
			{
				this.cbViewStack.selectedIndex = VS_CONSULTA;
				this.limparCampos();
			}
			
			public function mudaTipo():void
			{
				if(this.cadTipo.selectedLabel == Dicionario.PUBLICACAO_ARTIGO_REVISTA){
					this.cadConferencia.enabled = false;
					this.cadInstituicao.enabled = false;
					this.cadVolume.enabled = false;
					this.cadJornal.enabled = true;
					this.cadNumero.enabled = true;
					this.cadPaginas.enabled = true;
					this.cadAno.enabled = true;
					this.cadMes.enabled = false;
					
					this.campoObgJornal.visible = true;
					this.campoObgConferencia.visible = false;
					this.campoObgInstituicao.visible = false;
					this.campoObgAno.visible = true;
					
				}else if(this.cadTipo.selectedLabel == Dicionario.PUBLICACAO_ARTIGO_CONFERENCIA){
					this.cadConferencia.enabled = true;
					this.cadInstituicao.enabled = false;
					this.cadVolume.enabled = false;
					this.cadJornal.enabled = false;
					this.cadNumero.enabled = false;
					this.cadPaginas.enabled = true;
					this.cadAno.enabled = true;
					this.cadMes.enabled = true;
					
					this.campoObgJornal.visible = false;
					this.campoObgConferencia.visible = true;
					this.campoObgInstituicao.visible = false;
					this.campoObgAno.visible = true;
					
				}else if(this.cadTipo.selectedLabel == Dicionario.PUBLICACAO_DISSERTACAO || 
							this.cadTipo.selectedLabel == Dicionario.PUBLICACAO_TESE){
					this.cadConferencia.enabled = false;
					this.cadInstituicao.enabled = true;
					this.cadVolume.enabled = false;
					this.cadJornal.enabled = false;
					this.cadNumero.enabled = false;
					this.cadPaginas.enabled = false;
					this.cadAno.enabled = true;
					this.cadMes.enabled = true;
					
					this.campoObgJornal.visible = false;
					this.campoObgConferencia.visible = false;
					this.campoObgInstituicao.visible = true;
					this.campoObgAno.visible = true;
					
				}else {
					this.cadConferencia.enabled = false;
					this.cadInstituicao.enabled = false;
					this.cadVolume.enabled = false;
					this.cadJornal.enabled = false;
					this.cadNumero.enabled = false;
					this.cadPaginas.enabled = false;
					this.cadAno.enabled = false;
					this.cadMes.enabled = false;
					
					this.campoObgJornal.visible = false;
					this.campoObgConferencia.visible = false;
					this.campoObgInstituicao.visible = false;
					this.campoObgAno.visible = false;
					
				}
			}
			
			public function limparCampos():void
			{
				this.cadCodigo.text = "";
				this.cadArquivo.source = null;
				this.cadTitulo.text = "";
				this.cadConferencia.text = "";
				this.cadJornal.text = "";
				this.cadAutorExterno.text = "";
				this.cadInstituicao.text = "";
				this.cadAno.value = 1900;
				this.cadMes.value = 0;
				this.cadNumero.text = "";
				this.cadPaginas.value = 0;
				this.cadTipo.selectedIndex = 0;
				CONFIG::linhapesquisa{
				this.cadLinhaPesquisa.selectedIndex = 0;
				}
				this.cadVolume.text = "";	
				this.dpMembro = new ArrayCollection();
				this.dpArquivo = null;			
			}
			
			private function listar():void
			{
				var janela:PreviewWindow = new PreviewWindow();
				janela.width = Application.application.width;
				janela.height = Application.application.height;
				var template:DPTemplateLista = new DPTemplateLista();
				template.dpLista = this.dpRegistros;
				template.titulo = this.titutoReport;
				template.dtGrid = this.consDataGrid;
				template.ordenacao = this.getOrdenacao();
				var doc:Document = new Document( new TemplateLista() , template , PaperFormat.A4 );
				PopUpManager.addPopUp( janela , this , true );
				janela.previewComponent.doc = doc;
			}
			
			private function adicionarMembro():void
			{
				this.JanelaPesquisa = new TitleWindowPesquisa();
				this.JanelaPesquisa.initForm( "Pesquisa membro" , confirmarMembro , pesquisarMembro , null , "codigo" , "nome" , "Código" , "Nome" );
				PopUpManager.addPopUp( this.JanelaPesquisa , this , true );
				PopUpManager.centerPopUp( this.JanelaPesquisa );
			}
			
			private function confirmarMembro( membro:MembroVO ):void
			{
				if ( !this.registroDuplicado( membro ))
				{
					if(dpMembro == null){
						dpMembro = new ArrayCollection();
					}
					dpMembro.addItem( membro );
					this.JanelaPesquisa.cancelar();
					this.JanelaPesquisa = null;
				}
				else
				{
					Alert.show( Dicionario.REQUISITO_DUPLICADA , Dicionario.ALERT_TITLE_ERROR );
				}
			}
			
			private function registroDuplicado( membro:MembroVO ):Boolean
			{
				// existe curso selecionado
				var membroCollection:ArrayCollection = this.dpMembro;
				
				if ( membroCollection != null )
				{
					var membro1:MembroVO = null;
					for ( var i:uint = 0 ; i < membroCollection.length ; i++ )
					{
						 membro1 = membroCollection.getItemAt( i ) as MembroVO;
						
						if (( membro1.codigo.toLowerCase() == membro.codigo.toLowerCase()) && ( membro1.codigo.toString().length > 0 ))
						{
							return true;
						}
					}
				}
				return false;
			}
			
			private function removerMembro():void
			{
				
				if ( this.dataGridMembro.selectedItem != null )
				{
					var membro:MembroVO = ( this.dataGridMembro.selectedItem as MembroVO );
					for ( var w:uint = 0 ; w < this.dpMembro.length ; w++ )
					{
						var membro2:MembroVO = dpMembro.getItemAt( w ) as MembroVO;
						
						if (( membro2.codigo.toLowerCase() == membro.codigo.toLowerCase()) && ( membro2.codigo.toString().length > 0 ))
						{
							( this.dpMembro as ArrayCollection ).removeItemAt( w );
							break;
						}
					}
					
				}
			
			}
			
			
			private function pesquisarMembro( codigo:String , descricao:String ):void
			{
				var handlers:Callbacks = new Callbacks( this.JanelaPesquisa.resultSeach );
				var event:MembroEvent = new MembroEvent( MembroEvent.EVENT_PESQUISAR , handlers );
				var membro1:MembroVO = new MembroVO();
				membro1.codigo = ( codigo.length > 0 ? codigo : null );
				membro1.nome = ( descricao.length > 0 ? descricao : null );
				membro1.ativo = 'Ativo';
				event.params = membro1;
				event.dispatch();
			}
			
			public function SortDataGrid():void
			{
				this.dpRegistros.sort = new Sort();
				this.dpRegistros.sort.fields = this.getOrdenacao();
				this.dpRegistros.refresh();
			}
		]]>
	</mx:Script>


	<mx:ViewStack change="cbViewStackChance();"
				  height="552"
				  id="cbViewStack"
				  width="730"
				  x="0"
				  y="0"
				  >

		<mx:Canvas backgroundAlpha="1.0"
				   height="100%"
				   label="Consulta"
				   width="100%"
				   >

			<mx:Label text="{linguagem.xml.telaPublicacao.label.codigo}"
					  width="112"
					  x="10"
					  y="13"
					  />

			<mx:TextInput id="consCodigo"
						  maxChars="10"
						  width="100"
						  x="10"
						  y="31"
						  />

			<mx:Label text="{linguagem.xml.telaPublicacao.label.titulo}"
					  x="118"
					  y="13"
					  />

			<mx:TextInput id="consTitulo"
						  maxChars="60"
						  width="255"
						  x="118"
						  y="31"
						  />

			<mx:Label text="{linguagem.xml.telaPublicacao.label.tipo}"
					  x="381"
					  y="13"
					  />

			<mx:Button click="pesquisar();"
					   icon="{ico_pesquisar}"
					   id="BtnPesquisar"
					   label="{linguagem.xml.telaPublicacao.botao.pesquisar}"
					   width="96"
					   x="620"
					   y="31"
					   />

			<mx:Label text="{linguagem.xml.telaPublicacao.label.registros}"
					  x="10"
					  y="84"
					  />

			<mx:Label color="#FE0000"
					  id="cbcsCountReg"
					  text="{this.dpRegistros.length}"
					  x="153"
					  y="84"
					  />

			<mx:DataGrid creationComplete="SortDataGrid();"
						 dataProvider="{this.dpRegistros}"
						 height="360"
						 id="consDataGrid"
						 width="710"
						 wordWrap="true"
						 x="10"
						 y="101"
						 >

				<mx:columns>
					<mx:DataGridColumn dataField="id"
									   headerText="{linguagem.xml.telaPublicacao.dataGrid.codigo}"
									   id="dataGridColumnCodigo"
									   width="80"
									   />

					<mx:DataGridColumn dataField="title"
									   headerText="{linguagem.xml.telaPublicacao.dataGrid.titulo}"
									   id="dataGridColumnNome"
									   wordWrap="true"
									   />

					<mx:DataGridColumn dataField="tipo"
									   headerText="{linguagem.xml.telaPublicacao.dataGrid.tipo}"
									   id="dataGridColumnTipo"
									   width="200"
									   wordWrap="true"
									   />
				</mx:columns>
			</mx:DataGrid>

			<mx:Button bottom="10"
					   click="incluir();"
					   icon="{ico_incluir}"
					   id="BtnIncluir"
					   label="{linguagem.xml.telaPublicacao.botao.novo}"
					   left="10"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="editar();"
					   icon="{ico_editar}"
					   id="BtnEditar"
					   label="{linguagem.xml.telaPublicacao.botao.editar}"
					   left="114"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="excluir();"
					   icon="{ico_excluir}"
					   id="BtnExcluir"
					   label="{linguagem.xml.telaPublicacao.botao.excluir}"
					   left="218"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="detalhar();"
					   icon="{ico_detalhar}"
					   id="BtnDetalhar"
					   label="{linguagem.xml.telaPublicacao.botao.detalhar}"
					   left="322"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="listar();"
					   icon="{ico_listar}"
					   id="BtnListar"
					   label="{linguagem.xml.telaPublicacao.botao.listar}"
					   left="426"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="cancelarConsulta();"
					   icon="{ico_cancelar}"
					   id="BtnCancelar"
					   label="{linguagem.xml.telaPublicacao.botao.fechar}"
					   right="10"
					   width="100"
					   />
			<mx:ComboBox x="381" y="31" width="196" id="consTipos" dataProvider="{this.dpTipo}"></mx:ComboBox>

		</mx:Canvas>

		<mx:Canvas height="100%"
				   label="Cadastro"
				   width="100%"
				   >

			<mx:Label enabled="true"
					  text="{linguagem.xml.telaEditarPublicacao.label.codigo}"
					  width="112"
					  x="10"
					  y="10"
					  />

			<mx:TextInput id="cadCodigo"
						  width="112"
						  x="10"
						  y="28"
						  />

			<mx:Label text="{linguagem.xml.telaEditarPublicacao.label.titulo}"
					  x="10"
					  y="58"
					  />

			<mx:TextInput id="cadTitulo"
						  width="488"
						  x="10"
						  y="76"
						  />

			<mx:Button bottom="10"
					   click="salvar();"
					   icon="{ico_salvar}"
					   id="BtnSalvar"
					   label="{linguagem.xml.telaEditarPublicacao.botao.salvar}"
					   left="10"
					   width="96"
					   />

			<mx:Button bottom="10"
					   click="salvarENovo();"
					   icon="{ico_salvar}"
					   id="BtnSalvarENovo"
					   label="{linguagem.xml.telaEditarPublicacao.botao.salvarNovo}"
					   left="114"
					   width="122"
					   />

			<mx:Button bottom="10"
					   click="cancelarCadastro();"
					   icon="{ico_cancelar}"
					   id="BtnCancelar1"
					   label="{linguagem.xml.telaEditarPublicacao.botao.cancelar}"
					   right="10"
					   width="96"
					   />
			<view:ComboBoxFindSelected x="10" y="119" width="226" id="cadTipo" dataProvider="{this.dpTipo}" change="mudaTipo();"/>
			<mx:Label x="12" y="102" text="{linguagem.xml.telaEditarPublicacao.label.tipo}"/>
			<mx:Label x="422" y="193" text="Volume"/>
			<mx:TextInput x="422" y="209" width="69" id="cadVolume"/>
			<mx:Label x="259" y="192" text="{linguagem.xml.telaEditarPublicacao.label.ano}"/>
			<mx:Label x="348" y="192" text="{linguagem.xml.telaEditarPublicacao.label.mes}"/>
			<mx:Label x="506" y="193" text="{linguagem.xml.telaEditarPublicacao.label.numero}"/>
			<mx:TextInput x="506" y="209" width="71" id="cadNumero"/>
			<mx:Label x="585" y="193" text="{linguagem.xml.telaEditarPublicacao.label.paginas}"/>
			<mx:Button icon="{ico_adicionar}" click="browseAndUpload();" x="570" y="142" id="BtnAdicionarArquivo"/>
			<mx:Button icon="{ico_remover}" x="618" y="142" click="removerPDF();" id="BtnExcluirArquivo"/>
			<mx:TextInput x="10" y="165" width="226" id="cadConferencia"/>
			<mx:TextInput x="10" y="209" width="226" id="cadJornal"/>
			<mx:TextInput x="259" y="165" width="239" id="cadInstituicao"/>
			<mx:Label x="10" y="146" text="{linguagem.xml.telaEditarPublicacao.label.conference}"/>
			<mx:Label x="10" y="190" text="{linguagem.xml.telaEditarPublicacao.label.jornal}"/>
			<mx:Label x="259" y="146" text="{linguagem.xml.telaEditarPublicacao.label.institution}"/>
			<mx:NumericStepper x="348" y="209" id="cadMes" maximum="12" minimum="1"/>
			<mx:NumericStepper x="259" y="209" width="71" id="cadAno" minimum="1900" maximum="2999"/>
			<mx:NumericStepper x="585" y="209" id="cadPaginas" minimum="0" maximum="10000" width="73"/>
			<mx:Label x="54" y="58" text="*" color="#FC0202" id="campoObgTitulo"/>
			<mx:Label x="288" y="192" text="*" color="#FC0202" id="campoObgAno"/>
			<mx:Label x="330" y="146" text="*" color="#FC0202" id="campoObgInstituicao"/>
			<mx:Label x="87" y="146" text="*" color="#FC0202" id="campoObgConferencia"/>
			<mx:Label x="60" y="301" text="*" color="#FC0202"/>
			<mx:Label x="54" y="190" text="*" color="#FC0202" id="campoObgJornal"/>
			<mx:DataGrid x="10" y="318" width="648" dataProvider="{dpMembro}" id="dataGridMembro" wordWrap="true" height="151">
				<mx:columns>
					<mx:DataGridColumn dataField="{linguagem.xml.telaEditarPublicacao.dataGrid.codigo}"
									   headerText="Matrícula"
									   width="100"
									   />
					<mx:DataGridColumn dataField="nome"
									   headerText="{linguagem.xml.telaEditarPublicacao.dataGrid.nome}"
									   width="341"
									   />
					<mx:DataGridColumn dataField="tipo"
									   headerText="{linguagem.xml.telaEditarPublicacao.dataGrid.tipo}"
									   width="150"
									   />
				</mx:columns>
			</mx:DataGrid>
			<mx:Button bottom="53"
					   click="adicionarMembro();"
					   height="22"
					   icon="{ico_adicionar}"
					   id="BtnAdicionarMembro"
					   label="{linguagem.xml.telaEditarPublicacao.botao.adicionar}"
					   left="10"
					   width="100"
					   />
			<mx:Button bottom="53"
					   click="removerMembro();"
					   height="22"
					   icon="{ico_remover}"
					   id="BtnRemoverMembro"
					   label="{linguagem.xml.telaEditarPublicacao.botao.remover}"
					   left="118"
					   width="100"
					   />
			<mx:Label x="10" y="301" text="{linguagem.xml.telaEditarPublicacao.label.autores}"/>
			<mx:TextArea x="10" y="256" width="648" height="37" id="cadAutorExterno" editable="true"/>
			<mx:Label x="10" y="239" text="{linguagem.xml.telaEditarPublicacao.label.autoresExternos}"/>
			<mx:Image x="570" y="58" width="88" height="76" id="cadArquivo"/>
			<mx:Label x="570" y="41" text="{linguagem.xml.telaEditarPublicacao.label.arquivo}"/>
			<view:ComboBoxFindSelected x="259" y="119" width="239" id="cadLinhaPesquisa" visible="{CONFIG::linhapesquisa}" dataProvider="{this.dpLinhaPesquisa}"/>
			<mx:Label x="259" y="102" visible="{CONFIG::linhapesquisa}" text="{linguagem.xml.telaEditarPublicacao.label.linhaPesquisa}"/>

		</mx:Canvas>
	</mx:ViewStack>

</mx:TitleWindow>
