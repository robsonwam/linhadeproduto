<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow close="PopUpManager.removePopUp(this);"
				creationComplete="initForm();"
				height="550"
				layout="absolute"
				showCloseButton="true"
				title="Membro"
				width="750"
				xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:view="br.ufpe.cin.reuso.view.components.*"
				>

	<mx:Script>
		<![CDATA[
			import br.ufpe.cin.reuso.events.PublicacaoEvent;
			import br.ufpe.cin.reuso.vo.PublicacaoVO;
			import flexunit.flexui.controls.right.SelectedTestCaseForm;
			import br.ufpe.cin.reuso.view.reports.report.templates.TemplateLista;
			import br.ufpe.cin.reuso.view.reports.report.dataproviders.DPTemplateLista;
			import br.ufpe.cin.reuso.view.reports.report.custom.PreviewWindow;
			import br.ufpe.cin.reuso.util.Dicionario;
			import br.ufpe.cin.reuso.events.MembroEvent;
			import br.ufpe.cin.reuso.vo.MembroVO;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import mx.collections.ArrayCollection;
			
			import mx.managers.PopUpManager;
			import mx.core.Application;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			import mx.binding.utils.BindingUtils;
			import mx.events.FlexEvent;
			import mx.events.CloseEvent;
			
			import org.doc.PaperFormat;
			import org.doc.Document;
			
			import com.universalmind.cairngorm.events.Callbacks;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			
			// Icones dos botÃµes
			[Embed( source='../assets/images/novo.png' )]
			[Bindable]
			private static var ico_incluir:Class;
			
			[Embed( source='../assets/images/pesquisar.png' )]
			[Bindable]
			private static var ico_pesquisar:Class;
			
			[Embed( source='../assets/images/editar.png' )]
			[Bindable]
			private static var ico_editar:Class;
			
			[Embed( source='../assets/images/delete.png' )]
			[Bindable]
			private static var ico_excluir:Class;
			
			[Embed( source='../assets/images/detalhar.png' )]
			[Bindable]
			private static var ico_detalhar:Class;
			
			[Embed( source='../assets/images/listar.png' )]
			[Bindable]
			private static var ico_listar:Class;
			
			[Embed( source='../assets/images/cancelar.png' )]
			[Bindable]
			private static var ico_cancelar:Class;
			
			[Embed( source='../assets/images/salvar.png' )]
			[Bindable]
			private static var ico_salvar:Class;
			
			[Embed( source='../assets/images/incluir.png' )]
			[Bindable]
			private static var ico_adicionar:Class;
			
			[Embed( source='../assets/images/excluir.png' )]
			[Bindable]
			private static var ico_remover:Class;
			
			[Bindable]
			private var publicacao:PublicacaoVO;
			
			public static const AC_SEARCH:uint = 0;
			
			public static const AC_INSERT:uint = 1;
			
			public static const AC_INSERT_AND_NEW:uint = 2;
			
			public static const AC_DETAIL:uint = 3;
			
			public static const AC_UPDATE:uint = 4;
			
			public static const AC_DELETE:uint = 5;
			
			public static const AC_LIST:uint = 6;
			
			private var action:uint = 0;
			
			public var titutoReport:String = "Publicacao";
			
			public const VS_CONSULTA:uint = 0;
			
			public const VS_CADASTRO:uint = 1;
			
			private var dataFieldCodigo:String = "codigo";
			
			private var dataFieldNome:String = "nome";
			
			private var dataFieldTipo:String = "tipo";
			
			//private var dataFieldAtivo:String = "ativo";
			
			[Bindable]
			private var dpRegistros:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var dpTipo:ArrayCollection = new ArrayCollection();
			
//			[Bindable]
//			private var dpTipoEstudante:ArrayCollection = new ArrayCollection();
			
//			[Bindable]
//			private var dpAtivo:ArrayCollection = new ArrayCollection();
			
			private function initForm():void
			{
				this.dpTipo.addItem({ label: "", data: null });
				this.dpTipo.addItem({ label: Dicionario.PUBLICACAO_ARTIGO_CONFERENCIA, data: Dicionario.PUBLICACAO_ARTIGO_CONFERENCIA });
				this.dpTipo.addItem({ label: Dicionario.PUBLICACAO_ARTIGO_REVISTA, data: Dicionario.PUBLICACAO_ARTIGO_REVISTA });
				this.dpTipo.addItem({ label: Dicionario.PUBLICACAO_TESE, data: Dicionario.PUBLICACAO_TESE });
				this.dpTipo.addItem({ label: Dicionario.PUBLICACAO_DISSERTACAO, data: Dicionario.PUBLICACAO_DISSERTACAO });
				
//				this.dpTipoEstudante.addItem({ label: "", data: null });
//				this.dpTipoEstudante.addItem({ label: Dicionario.MEMBRO_DOUTORADO, data: Dicionario.MEMBRO_DOUTORADO });
//				this.dpTipoEstudante.addItem({ label: Dicionario.MEMBRO_MESTRADO, data: Dicionario.MEMBRO_MESTRADO });
//				this.dpTipoEstudante.addItem({ label: Dicionario.MEMBRO_INICIACAO, data: Dicionario.MEMBRO_INICIACAO });
//				
//				this.dpAtivo.addItem({ label: "", data: null });
//				this.dpAtivo.addItem({ label: Dicionario.MEMBRO_ATIVO, data: Dicionario.MEMBRO_ATIVO });
//				this.dpAtivo.addItem({ label: Dicionario.MEMBRO_FORMER_MEMBER, data: Dicionario.MEMBRO_FORMER_MEMBER });
				
			}

			
			private function getOrdenacao():Array
			{
				return [ new SortField( this.dataFieldCodigo , true ) , new SortField( this.dataFieldNome , true ) , new SortField( this.dataFieldTipo , true )];
			}
			
			private function setEntidade( action:uint ):void
			{
				if (( action == AC_UPDATE ) || ( action == AC_DETAIL ))
				{
					this.publicacao = this.consDataGrid.selectedItem as PublicacaoVO;
				}
				
				this.cadCodigo.text = publicacao.id.toString();
				this.cadTitulo.text = publicacao.title;
				this.cadTipo.selectedItem = publicacao.tipo;
				this.cadConferencia.text = publicacao.conference;
				this.cadJornal.text = publicacao.jornal;
				this.cadInstituicao.text = publicacao.school;
				//this.cadArquivo = publicacao.arquivo;
				this.cadAno.text = publicacao.ano.toString();
				this.cadVolume.text = publicacao.volume;
				this.cadNumero.text = publicacao.numero.toString();
				this.cadPaginas.text = publicacao.pages.toString();
				this.cadMes.text = publicacao.mes.toString();
			}
			
			private function DispararEvento( action:uint ):void
			{
				var handlers:Callbacks = null;
				var event:PublicacaoEvent = null;
				var f:PublicacaoVO = new PublicacaoVO();
				
				if ( action == AC_SEARCH )
				{
					// Pega os dados da tela de pesquisa
					f.id = int(this.consCodigo.text);
					f.title = this.cadTitulo.text;
					f.tipo = this.cadTipo.selectedLabel;
				}
				else if (( action == AC_INSERT ) || ( action == AC_INSERT_AND_NEW ) || ( action == AC_UPDATE ))
				{
					// Pega os dados da tela de cadastro
					f.id = int(this.cadCodigo.text);
					f.title = this.cadTitulo.text;
					f.conference = this.cadConferencia.text;
					f.jornal = this.cadJornal.text;
					f.school = this.cadInstituicao.text;
					f.ano = int(this.cadAno.text);
					f.volume = this.cadVolume.text;
					f.numero = this.cadNumero.text;
					f.pages = int(this.cadPaginas.text);
					f.mes = int(this.cadMes.text);
					f.tipo = this.cadTipo.selectedLabel;
				}
				else if ( action == AC_DELETE )
				{
					// Pega os dados no datagrid na tela de conculta
					f = this.consDataGrid.selectedItem as PublicacaoVO;
				}
				
				if ( action == AC_SEARCH )
				{
					handlers = new Callbacks( onResult_Pesquisar );
					event = new PublicacaoEvent( PublicacaoEvent.EVENT_PESQUISAR , handlers );
					
				}
				else if ( action == AC_INSERT )
				{
					handlers = new Callbacks( onResult_SalvarInsert );
					event = new PublicacaoEvent( PublicacaoEvent.EVENT_INSERIR , handlers );
					
				}
				else if ( action == AC_INSERT_AND_NEW )
				{
					handlers = new Callbacks( onResult_SalvarENovo );
					event = new PublicacaoEvent( PublicacaoEvent.EVENT_INSERIR , handlers );
					
				}
				else if ( action == AC_UPDATE )
				{
					handlers = new Callbacks( onResult_SalvarUpdate );
					event = new PublicacaoEvent( PublicacaoEvent.EVENT_EDITAR , handlers );
					
				}
				else if ( action == AC_DELETE )
				{
					if (( this.consDataGrid.selectedItem as MembroVO ) != null )
					{
						handlers = new Callbacks( onResult_Excluir );
						event = new PublicacaoEvent( PublicacaoEvent.EVENT_EXCLUIR , handlers );
					}
					else
					{
						Alert.show( Dicionario.REGISTROS_NAO_SELECIONADO );
					}
				}
				
				if ( event != null )
				{
					event.params = f;
					event.dispatch();
				}
			}
			
			private function openCadastro( action:uint ):void
			{
				this.action = action;
				
				if (( action == AC_UPDATE ) || ( action == AC_DETAIL ))
				{
					if ( this.consDataGrid.selectedItem != null )
					{
						this.cbViewStack.selectedIndex = VS_CADASTRO;
					}
					else
					{
						Alert.show( Dicionario.REGISTROS_NAO_SELECIONADO );
					}
				}
				else
				{
					this.cbViewStack.selectedIndex = VS_CADASTRO;
				}
			}
			
			private function cbViewStackChance():void
			{
				
				this.cadCodigo.enabled = true;
				this.cadTitulo.enabled = true;
				this.cadConferencia.enabled = true;
				this.cadJornal.enabled = true;
				this.cadInstituicao.enabled = true;
				this.BtnSalvar.visible = true;
				this.BtnSalvarENovo.visible = true;
				this.cadAno.visible = true;
				this.cadArquivo.visible = true;
				this.cadMes.visible = true;
				this.cadNumero.visible = true;
				this.cadPaginas.visible = true;
				this.cadTipo.visible = true;
				this.cadVolume.visible = true;
								
				if ( this.action == AC_UPDATE )
				{
					this.BtnSalvarENovo.visible = false;
				}
				else if ( this.action == AC_DETAIL )
				{
					this.cadCodigo.enabled = false;
					this.cadTitulo.enabled = false;
					this.cadConferencia.enabled = false;
					this.cadJornal.enabled = false;
					this.cadInstituicao.enabled = false;
					this.cadAno.visible = false;
					this.cadArquivo.visible = false;
					this.cadMes.visible = false;
					this.cadNumero.visible = false;
					this.cadPaginas.visible = false;
					this.cadTipo.visible = false;
					this.cadVolume.visible = false;
					this.BtnSalvar.visible = false;
					this.BtnSalvarENovo.visible = false;
					this.BtnAdicionarArquivo.visible = false;
					this.BtnExcluirArquivo.visible = false;
				}
				
				this.setEntidade( this.action );
			}
			
			
			private function pesquisar():void
			{
				this.DispararEvento( AC_SEARCH );
			}
			
			private function salvar():void
			{
				
				this.DispararEvento( this.action );
			}
			
			private function salvarENovo():void
			{
				this.DispararEvento( AC_INSERT_AND_NEW );
			}
			
			private function incluir():void
			{
				this.openCadastro( AC_INSERT );
			}
			
			private function editar():void
			{
				this.openCadastro( AC_UPDATE );
			}
			
			private function detalhar():void
			{
				this.openCadastro( AC_DETAIL );
			}
			
			private function excluir():void
			{
				// instantiate the Alert box
				if ( this.consDataGrid.selectedItem != null )
				{
					var a:Alert = Alert.show( Dicionario.CONFIRMAR_EXCLUSAO , "Confirmar" , Alert.YES | Alert.NO , this , this.confirmarExclusao , null , Alert.NO );
				}
				else
				{
					Alert.show( Dicionario.REGISTROS_NAO_SELECIONADO );
				}
			}
			
			private function confirmarExclusao( event:CloseEvent ):void
			{
				if ( event.detail == Alert.YES )
				{
					this.DispararEvento( AC_DELETE );
				}
			}
			
			private function onResult_Pesquisar( result:ArrayCollection ):void
			{
				this.dpRegistros = result as ArrayCollection;
			}
			
			private function onResult_SalvarInsert( result:Boolean ):void
			{
				if ( result )
				{
					this.cancelarCadastro();
					this.pesquisar();
				}
			}
			
			private function onResult_SalvarENovo( result:Boolean ):void
			{
				if ( result )
				{
					this.limparCampos();
				}
			}
			
			private function onResult_SalvarUpdate( result:Boolean ):void
			{
				if ( result )
				{
					this.cancelarCadastro();
					this.pesquisar();
				}
			}
			
			private function onResult_Excluir( result:Boolean ):void
			{
				if ( result )
				{
					Alert.show( Dicionario.OK_EXCLUIR );
					this.pesquisar();
				}
			}
			
			private function cancelarConsulta():void
			{
				PopUpManager.removePopUp( this );
			}
			
			private function cancelarCadastro():void
			{
				this.cbViewStack.selectedIndex = VS_CONSULTA;
				this.limparCampos();
			}
			
			public function limparCampos():void
			{
				this.cadCodigo.text = "";
				this.cadTitulo.text = "";
				this.cadConferencia.text = "";
				this.cadJornal.text = "";
				this.cadInstituicao.text = "";
				this.cadAno.text = "";
				this.cadArquivo.text = "";
				this.cadMes.visible = "";
				this.cadNumero.text = "";
				this.cadPaginas.text = "";
				this.cadTipo.selectedIndex = 0;
				this.cadVolume.text = "";				
			}
			
			private function listar():void
			{
				var janela:PreviewWindow = new PreviewWindow();
				janela.width = Application.application.width;
				janela.height = Application.application.height;
				var template:DPTemplateLista = new DPTemplateLista();
				template.dpLista = this.dpRegistros;
				template.titulo = this.titutoReport;
				template.dtGrid = this.consDataGrid;
				template.ordenacao = this.getOrdenacao();
				var doc:Document = new Document( new TemplateLista() , template , PaperFormat.A4 );
				PopUpManager.addPopUp( janela , this , true );
				janela.previewComponent.doc = doc;
			}
			
			private function validarDados():Boolean
			{
				if ( cadTitulo.text.length <= 0 )
				{
					Alert.show( "Favor informa a descriÃ§Ã£o!" , Dicionario.ALERT_TITLE_ERROR );
					return false;
				}
				return true;
			}
			
			public function SortDataGrid():void
			{
				this.dpRegistros.sort = new Sort();
				this.dpRegistros.sort.fields = this.getOrdenacao();
				this.dpRegistros.refresh();
			}
		]]>
	</mx:Script>


	<mx:ViewStack change="cbViewStackChance();"
				  height="510"
				  id="cbViewStack"
				  width="730"
				  x="0"
				  y="0"
				  >

		<mx:Canvas backgroundAlpha="1.0"
				   height="100%"
				   label="Consulta"
				   width="100%"
				   >

			<mx:Label text="CÃ³digo"
					  width="112"
					  x="10"
					  y="13"
					  />

			<mx:TextInput id="consCodigo"
						  maxChars="10"
						  width="100"
						  x="10"
						  y="31"
						  />

			<mx:Label text="Nome"
					  x="118"
					  y="13"
					  />

			<mx:TextInput id="consNome"
						  maxChars="60"
						  width="255"
						  x="118"
						  y="31"
						  />

			<mx:Label text="Tipo"
					  x="381"
					  y="13"
					  />

			<mx:Button click="pesquisar();"
					   icon="{ico_pesquisar}"
					   id="BtnPesquisar"
					   label="{Dicionario.BTN_PESQUISAR}"
					   width="96"
					   x="620"
					   y="31"
					   />

			<mx:Label text="{Dicionario.REGISTROS_ENCONTRADOS}"
					  x="10"
					  y="84"
					  />

			<mx:Label color="#FE0000"
					  id="cbcsCountReg"
					  text="{this.dpRegistros.length}"
					  x="153"
					  y="84"
					  />

			<mx:DataGrid creationComplete="SortDataGrid();"
						 dataProvider="{this.dpRegistros}"
						 height="360"
						 id="consDataGrid"
						 width="710"
						 wordWrap="true"
						 x="10"
						 y="101"
						 >

				<mx:columns>
					<mx:DataGridColumn dataField="id"
									   headerText="CÃ³digo"
									   id="dataGridColumnCodigo"
									   width="80"
									   />

					<mx:DataGridColumn dataField="title"
									   headerText="TÃ­tulo"
									   id="dataGridColumnNome"
									   wordWrap="true"
									   />

					<mx:DataGridColumn dataField="tipo"
									   headerText="Tipo"
									   id="dataGridColumnTipo"
									   width="200"
									   wordWrap="true"
									   />
				</mx:columns>
			</mx:DataGrid>

			<mx:Button bottom="10"
					   click="incluir();"
					   icon="{ico_incluir}"
					   id="BtnIncluir"
					   label="{Dicionario.BTN_INCLUIR}"
					   left="10"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="editar();"
					   icon="{ico_editar}"
					   id="BtnEditar"
					   label="{Dicionario.BTN_EDITAR}"
					   left="114"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="excluir();"
					   icon="{ico_excluir}"
					   id="BtnExcluir"
					   label="{Dicionario.BTN_EXCLUIR}"
					   left="218"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="detalhar();"
					   icon="{ico_detalhar}"
					   id="BtnDetalhar"
					   label="{Dicionario.BTN_DETALHAR}"
					   left="322"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="listar();"
					   icon="{ico_listar}"
					   id="BtnListar"
					   label="{Dicionario.BTN_LISTAR}"
					   left="426"
					   width="100"
					   />

			<mx:Button bottom="10"
					   click="cancelarConsulta();"
					   icon="{ico_cancelar}"
					   id="BtnCancelar"
					   label="{Dicionario.BTN_FECHAR}"
					   right="10"
					   width="100"
					   />
			<mx:ComboBox x="381" y="31" width="196" id="consTipo" dataProvider="{this.dpTipo}"></mx:ComboBox>

		</mx:Canvas>

		<mx:Canvas height="100%"
				   label="Cadastro"
				   width="100%"
				   >

			<mx:Label enabled="true"
					  text="CÃ³digo"
					  width="112"
					  x="10"
					  y="10"
					  />

			<mx:TextInput id="cadCodigo"
						  width="112"
						  x="10"
						  y="28"
						  />

			<mx:Label text="TÃ­tulo"
					  x="10"
					  y="58"
					  />

			<mx:TextInput id="cadTitulo"
						  width="488"
						  x="10"
						  y="76"
						  />

			<mx:Button bottom="10"
					   click="salvar();"
					   icon="{ico_salvar}"
					   id="BtnSalvar"
					   label="{Dicionario.BTN_SALVAR}"
					   left="10"
					   width="96"
					   />

			<mx:Button bottom="10"
					   click="salvarENovo();"
					   icon="{ico_salvar}"
					   id="BtnSalvarENovo"
					   label="{Dicionario.BTN_SALVAR_E_NOVO}"
					   left="114"
					   width="122"
					   />

			<mx:Button bottom="10"
					   click="cancelarCadastro();"
					   icon="{ico_cancelar}"
					   id="BtnCancelar1"
					   label="{Dicionario.BTN_CANCELAR}"
					   right="10"
					   width="96"
					   />
			<view:ComboBoxFindSelected x="10" y="123" width="226" id="cadTipo" dataProvider="{this.dpTipo}"/>
			<mx:Label x="12" y="106" text="Tipo"/>
			<mx:Label x="10" y="316" text="Volume"/>
			<mx:TextInput x="10" y="332" width="224" id="cadVolume"/>
			<mx:Label x="10" y="269" text="Ano"/>
			<mx:Label x="259" y="269" text="MÃªs"/>
			<mx:TextInput x="10" y="286" width="226" id="cadAno"></mx:TextInput>
			<mx:TextInput x="259" y="286" width="239" id="cadMes"></mx:TextInput>
			<mx:Label x="259" y="316" text="NÃºmero"/>
			<mx:TextInput x="259" y="332" width="239" id="cadNumero"/>
			<mx:TextInput x="10" y="377" width="224" id="cadPaginas"/>
			<mx:Label x="10" y="362" text="PÃ¡ginas"/>
			<mx:Button icon="{ico_adicionar}" x="570" y="153" id="BtnAdicionarArquivo"/>
			<mx:Button icon="{ico_remover}" x="618" y="153" id="BtnExcluirArquivo"/>
			<mx:TextInput x="259" y="123" width="399" id="cadArquivo"/>
			<mx:Label x="259" y="106" text="Arquivo"/>
			<mx:TextInput x="10" y="176" width="226" id="cadConferencia"/>
			<mx:TextInput x="10" y="225" width="226" id="cadJornal"/>
			<mx:TextInput x="259" y="176" width="239" id="cadInstituicao"/>
			<mx:Label x="10" y="157" text="ConferÃªncia"/>
			<mx:Label x="10" y="206" text="Jornal"/>
			<mx:Label x="259" y="157" text="InstituiÃ§Ã£o"/>

		</mx:Canvas>
	</mx:ViewStack>

</mx:TitleWindow>
